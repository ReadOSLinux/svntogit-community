From 23fc2778b9ce6288cdcb33ae6b40926dc7dd69bf Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Adrien=20B=C3=A9raud?= <adrien.beraud@savoirfairelinux.com>
Date: Mon, 1 Oct 2018 16:36:08 -0400
Subject: [PATCH] build: make static, shared builds optional

---
 CMakeLists.txt | 52 ++++++++++++++++++++++++++++++--------------------
 1 file changed, 31 insertions(+), 21 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 2b27743..5e99964 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -7,6 +7,8 @@ message( "Copyright 2013-2018, Corvusoft Ltd, All Rights Reserved." )
 # Build Options
 #
 option( BUILD_SSL      "Build secure socket layer support."  ON )
+option( BUILD_STATIC   "Build static library."  ON )
+option( BUILD_SHARED   "Build shared library."  OFF )
 
 #
 # Configuration
@@ -61,27 +63,31 @@ include_directories( ${INCLUDE_DIR} SYSTEM ${asio_INCLUDE} ${kashmir_INCLUDE} ${
 #
 file( GLOB_RECURSE MANIFEST "${SOURCE_DIR}/*.cpp" )
 
-set( STATIC_LIBRARY_NAME "${PROJECT_NAME}-static" )
-add_library( ${STATIC_LIBRARY_NAME} STATIC ${MANIFEST} )
-set_property( TARGET ${STATIC_LIBRARY_NAME} PROPERTY CXX_STANDARD 11 )
-set_property( TARGET ${STATIC_LIBRARY_NAME} PROPERTY CXX_STANDARD_REQUIRED ON )
-set_target_properties( ${STATIC_LIBRARY_NAME} PROPERTIES OUTPUT_NAME ${PROJECT_NAME} )
-if ( BUILD_SSL )
-    target_link_libraries( ${STATIC_LIBRARY_NAME} LINK_PRIVATE ${ssl_LIBRARY_STATIC} ${crypto_LIBRARY_STATIC} )
-else ( )
-    target_link_libraries( ${STATIC_LIBRARY_NAME} )
+if ( BUILD_STATIC )
+    set( STATIC_LIBRARY_NAME "${PROJECT_NAME}-static" )
+    add_library( ${STATIC_LIBRARY_NAME} STATIC ${MANIFEST} )
+    set_property( TARGET ${STATIC_LIBRARY_NAME} PROPERTY CXX_STANDARD 11 )
+    set_property( TARGET ${STATIC_LIBRARY_NAME} PROPERTY CXX_STANDARD_REQUIRED ON )
+    set_target_properties( ${STATIC_LIBRARY_NAME} PROPERTIES OUTPUT_NAME ${PROJECT_NAME} )
+    if ( BUILD_SSL )
+        target_link_libraries( ${STATIC_LIBRARY_NAME} LINK_PRIVATE ${ssl_LIBRARY_STATIC} ${crypto_LIBRARY_STATIC} )
+    else ( )
+        target_link_libraries( ${STATIC_LIBRARY_NAME} )
+    endif ( )
 endif ( )
 
-set( SHARED_LIBRARY_NAME "${PROJECT_NAME}-shared" )
-add_library( ${SHARED_LIBRARY_NAME} SHARED ${MANIFEST} )
-set_property( TARGET ${SHARED_LIBRARY_NAME} PROPERTY CXX_STANDARD 11 )
-set_property( TARGET ${SHARED_LIBRARY_NAME} PROPERTY CXX_STANDARD_REQUIRED ON )
-set_target_properties( ${SHARED_LIBRARY_NAME} PROPERTIES OUTPUT_NAME ${PROJECT_NAME} )
-set_target_properties( ${SHARED_LIBRARY_NAME} PROPERTIES SOVERSION ${PROJECT_VERSION_MAJOR} VERSION ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR} )
-if ( BUILD_SSL )
-    target_link_libraries( ${SHARED_LIBRARY_NAME} LINK_PRIVATE ${ssl_LIBRARY_SHARED} ${crypto_LIBRARY_SHARED} )
-else ( )
-    target_link_libraries( ${SHARED_LIBRARY_NAME} )
+if ( BUILD_SHARED )
+    set( SHARED_LIBRARY_NAME "${PROJECT_NAME}-shared" )
+    add_library( ${SHARED_LIBRARY_NAME} SHARED ${MANIFEST} )
+    set_property( TARGET ${SHARED_LIBRARY_NAME} PROPERTY CXX_STANDARD 11 )
+    set_property( TARGET ${SHARED_LIBRARY_NAME} PROPERTY CXX_STANDARD_REQUIRED ON )
+    set_target_properties( ${SHARED_LIBRARY_NAME} PROPERTIES OUTPUT_NAME ${PROJECT_NAME} )
+    set_target_properties( ${SHARED_LIBRARY_NAME} PROPERTIES SOVERSION ${PROJECT_VERSION_MAJOR} VERSION ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR} )
+    if ( BUILD_SSL )
+        target_link_libraries( ${SHARED_LIBRARY_NAME} LINK_PRIVATE ${ssl_LIBRARY_SHARED} ${crypto_LIBRARY_SHARED} )
+    else ( )
+        target_link_libraries( ${SHARED_LIBRARY_NAME} )
+    endif ( )
 endif ( )
 
 
@@ -92,5 +98,9 @@ file( GLOB ARTIFACTS "${SOURCE_DIR}/*.hpp" )
 
 install( FILES "${INCLUDE_DIR}/${PROJECT_NAME}" DESTINATION "${CMAKE_INSTALL_PREFIX}/include" )
 install( FILES ${ARTIFACTS} DESTINATION "${CMAKE_INSTALL_PREFIX}/include/corvusoft/${PROJECT_NAME}" )
-install( TARGETS ${STATIC_LIBRARY_NAME} LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT library )
-install( TARGETS ${SHARED_LIBRARY_NAME} LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT library )
+if ( BUILD_STATIC )
+    install( TARGETS ${STATIC_LIBRARY_NAME} LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT library )
+endif ( )
+if ( BUILD_SHARED )
+    install( TARGETS ${SHARED_LIBRARY_NAME} LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT library )
+endif ( )
-- 
2.20.0

